define("local_eventocoursecreation/preview",["core/notification","core/str","core/templates","core/ajax"],(function(Notification,Str,Templates,Ajax){const Selectors_sections={bulkCreation:"#id_runnowheader",individualCreation:"#id_individualcreationheader",individualContainer:"#id_individualcreationheadercontainer"},Selectors_controls={bulkForce:"#id_force",individualForce:".force-create",bulkCreate:"#id_runnow",createSingle:".create-single",courseSelect:".course-select",createSelected:".create-selected",selectAllEligible:"#select-all-eligible",forceAll:"#force-all"},Selectors_regions={previewGrid:".course-grid",courseCard:".course-preview-card",previewContainer:"#evento-preview-content",courseItem:".course-item"},Selectors_counters={selectedCount:"#selected-count",totalCount:"#total-count",selectedBadge:".selected-count-badge"},Selectors_filters={buttons:".filter-buttons .btn",active:".filter-buttons .btn.active"},Selectors_sorts={select:".sort-select"};let cachedPreviewData=null,previewContainer=null,categoryId=null,isCreatingCourse=!1;const renderPreviewContent=async()=>{var _cachedPreviewData,_cachedPreviewData2;if(previewContainer)if(null!==(_cachedPreviewData=cachedPreviewData)&&void 0!==_cachedPreviewData&&_cachedPreviewData.status&&Array.isArray(cachedPreviewData.courses))if(0!==cachedPreviewData.courses.length)try{const templateContext={courses:cachedPreviewData.courses,showCreateSelected:!0,hasSelectedCourses:cachedPreviewData.courses.some((course=>course.canCreate))},template=await Templates.render("local_eventocoursecreation/preview_grid",templateContext);previewContainer.innerHTML=template,initializePreviewHandlers()}catch(error){console.error("Error rendering preview content:",error),previewContainer.innerHTML='\n                <div class="alert alert-danger">\n                    '.concat(M.util.get_string("previewerror","local_eventocoursecreation"),"\n                </div>"),Notification.exception(error)}else previewContainer.innerHTML='\n                <div class="alert alert-info">\n                    <i class="fa fa-info-circle"></i>\n                    '.concat(M.util.get_string("nocoursestocreate","local_eventocoursecreation"),"\n                </div>");else previewContainer.innerHTML='\n                <div class="alert alert-info">\n                    <i class="fa fa-info-circle"></i>\n                    '.concat((null===(_cachedPreviewData2=cachedPreviewData)||void 0===_cachedPreviewData2?void 0:_cachedPreviewData2.message)||M.util.get_string("nocoursestocreate","local_eventocoursecreation"),"\n                </div>");else console.error("Preview container not initialized")},loadPreviewData=async function(catId){let refresh=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{const formData=new FormData;formData.append("categoryid",catId),formData.append("sesskey",M.cfg.sesskey),refresh&&formData.append("refresh",1),previewContainer.innerHTML='\n                <div class="text-center p-4">\n                    <div class="spinner-border text-primary" role="status">\n                        <span class="sr-only">'.concat(M.util.get_string("loading","local_eventocoursecreation"),'</span>\n                    </div>\n                    <p class="mt-2">').concat(M.util.get_string("loadingcourselist","local_eventocoursecreation"),"</p>\n                </div>\n            ");const response=await fetch("".concat(M.cfg.wwwroot,"/local/eventocoursecreation/preview.php"),{method:"POST",body:formData});if(!response.ok)throw new Error("Network response was not ok");if(cachedPreviewData=await response.json(),!cachedPreviewData.status)throw new Error(cachedPreviewData.message||"Failed to load preview data");const section=document.querySelector(Selectors_sections.individualCreation);return section&&!section.classList.contains("collapsed")&&await renderPreviewContent(),cachedPreviewData}catch(error){return console.error("Preview load failed:",error),previewContainer&&(previewContainer.innerHTML='\n                    <div class="alert alert-danger">\n                        '.concat(error.message||M.util.get_string("previewloadfailed","local_eventocoursecreation"),"\n                    </div>")),null}},updateCourseSelectionState=courseCard=>{const checkbox=courseCard.querySelector(Selectors_controls.courseSelect),forceCheckbox=courseCard.querySelector(Selectors_controls.individualForce),createButton=courseCard.querySelector(Selectors_controls.createSingle),isForced=(null==forceCheckbox?void 0:forceCheckbox.checked)||!1,courseItem=courseCard.closest(Selectors_regions.courseItem);if(!courseItem)return;const eventId=courseItem.dataset.eventId,course=cachedPreviewData.courses.find((c=>c.eventId===parseInt(eventId)));course&&(course.canCreate||isForced?(checkbox.disabled=!1,createButton.disabled=!1):(checkbox.checked=!1,checkbox.disabled=!0,createButton.disabled=!0)),updateCreateSelectedButton()},updateCreateSelectedButton=()=>{const createSelectedBtn=document.querySelector(Selectors_controls.createSelected);if(!createSelectedBtn)return;const selectedCourses=document.querySelectorAll("".concat(Selectors_controls.courseSelect,":checked"));createSelectedBtn.disabled=0===selectedCourses.length;const badge=document.querySelector(Selectors_counters.selectedBadge);badge&&(badge.textContent=selectedCourses.length)},updateSelectionCount=()=>{const selectedCourses=document.querySelectorAll("".concat(Selectors_controls.courseSelect,":checked")),totalCourses=document.querySelectorAll(Selectors_controls.courseSelect),selectedCountEl=document.querySelector(Selectors_counters.selectedCount),totalCountEl=document.querySelector(Selectors_counters.totalCount);selectedCountEl&&(selectedCountEl.textContent=selectedCourses.length),totalCountEl&&(totalCountEl.textContent=totalCourses.length)},handleForceChange=e=>{const courseCard=e.target.closest(Selectors_regions.courseCard);courseCard&&updateCourseSelectionState(courseCard)},handleCourseSelection=e=>{updateCreateSelectedButton(),updateSelectionCount()},createSelectedCourses=async()=>{const selectedCards=document.querySelectorAll("".concat(Selectors_controls.courseSelect,":checked")),courses=Array.from(selectedCards).map((checkbox=>{const item=checkbox.closest(Selectors_regions.courseItem);if(!item)return null;const forceCheckbox=checkbox.closest(Selectors_regions.courseCard).querySelector(Selectors_controls.individualForce);return{eventId:parseInt(item.dataset.eventId),force:forceCheckbox.checked}})).filter(Boolean);if(0===courses.length)return;const createSelectedBtn=document.querySelector(Selectors_controls.createSelected);await(async(courses,button)=>{if(isCreatingCourse||0===courses.length)return;isCreatingCourse=!0;const originalText=button.innerHTML;button.innerHTML='<i class="fa fa-spinner fa-spin"></i> '.concat(M.util.get_string("creating","local_eventocoursecreation")),button.disabled=!0;const results=[];let successful=0,failed=0;for(const course of courses)try{const courseCard=document.querySelector('.course-item[data-event-id="'.concat(course.eventId,'"] ').concat(Selectors_regions.courseCard));courseCard&&courseCard.classList.add("creating");const formData=new FormData;formData.append("eventid",course.eventId),formData.append("force",course.force?1:0),formData.append("categoryid",categoryId),formData.append("sesskey",M.cfg.sesskey);const response=await fetch("".concat(M.cfg.wwwroot,"/local/eventocoursecreation/create_course.php"),{method:"POST",body:formData}),result=await response.json();results.push({status:result.status,message:result.message}),result.status?(successful++,courseCard&&(courseCard.classList.add("created"),setTimeout((()=>{const item=courseCard.closest(Selectors_regions.courseItem);item&&(item.style.opacity=0,setTimeout((()=>item.remove()),300))}),500)),cachedPreviewData.courses=cachedPreviewData.courses.filter((c=>c.eventId!==course.eventId))):(failed++,courseCard&&(courseCard.classList.remove("creating"),courseCard.classList.add("error"),setTimeout((()=>{courseCard.classList.remove("error")}),2e3)))}catch(error){results.push({status:!1,message:error.message}),failed++;const courseCard=document.querySelector('.course-item[data-event-id="'.concat(course.eventId,'"] ').concat(Selectors_regions.courseCard));courseCard&&(courseCard.classList.remove("creating"),courseCard.classList.add("error"),setTimeout((()=>{courseCard.classList.remove("error")}),2e3))}successful>0&&Notification.addNotification({message:M.util.get_string("creationsuccessfulcount","local_eventocoursecreation",successful),type:"success"}),failed>0&&Notification.addNotification({message:M.util.get_string("creationfailedcount","local_eventocoursecreation",failed),type:"error"}),button.innerHTML=originalText,button.disabled=!0,isCreatingCourse=!1,updateSelectionCount(),updateCreateSelectedButton()})(courses,createSelectedBtn)},applyFilter=filterType=>{document.querySelectorAll(Selectors_regions.courseItem).forEach((item=>{const status=item.dataset.status;switch(filterType){case"all":item.style.display="";break;case"ready":item.style.display="ready"===status?"":"none";break;case"blocked":item.style.display="blocked"===status?"":"none"}})),document.querySelectorAll(Selectors_filters.buttons).forEach((btn=>{btn.classList.remove("active")}));const activeButton=document.querySelector("".concat(Selectors_filters.buttons,'[data-filter="').concat(filterType,'"]'));activeButton&&activeButton.classList.add("active")},applySortBy=sortType=>{const grid=document.querySelector(Selectors_regions.previewGrid);if(!grid)return;const items=Array.from(document.querySelectorAll(Selectors_regions.courseItem));items.sort(((a,b)=>{switch(sortType){case"status":if(a.dataset.status!==b.dataset.status)return"ready"===a.dataset.status?-1:1;case"date":return parseInt(a.dataset.date)-parseInt(b.dataset.date);case"name":return a.dataset.name.localeCompare(b.dataset.name);default:return 0}})),items.forEach((item=>{grid.appendChild(item)}))},handleSelectAllEligible=e=>{const isChecked=e.target.checked;document.querySelectorAll(Selectors_regions.courseItem).forEach((item=>{const checkbox=item.querySelector(Selectors_controls.courseSelect);checkbox&&!checkbox.disabled&&(checkbox.checked=isChecked)})),updateCreateSelectedButton(),updateSelectionCount()},handleForceAll=e=>{const isChecked=e.target.checked;document.querySelectorAll(Selectors_controls.individualForce).forEach((checkbox=>{checkbox.checked=isChecked;const card=checkbox.closest(Selectors_regions.courseCard);card&&updateCourseSelectionState(card)})),updateCreateSelectedButton(),updateSelectionCount()},initializePreviewHandlers=()=>{const container=document.querySelector(Selectors_regions.previewContainer);if(!container)return;container.querySelectorAll(Selectors_controls.individualForce).forEach((checkbox=>{checkbox.addEventListener("change",handleForceChange)})),container.querySelectorAll(Selectors_controls.courseSelect).forEach((checkbox=>{checkbox.addEventListener("change",handleCourseSelection)})),container.querySelectorAll(Selectors_controls.createSingle).forEach((button=>{button.addEventListener("click",(async e=>{const item=e.target.closest(Selectors_regions.courseItem);if(!item)return;const eventId=parseInt(item.dataset.eventId),forceCheckbox=e.target.closest(Selectors_regions.courseCard).querySelector(Selectors_controls.individualForce);await(async(eventId,force,button)=>{if(isCreatingCourse)return;isCreatingCourse=!0;const originalText=button.innerHTML,card=button.closest(Selectors_regions.courseCard);button.innerHTML='<i class="fa fa-spinner fa-spin"></i>',button.disabled=!0,card&&card.classList.add("creating");try{const formData=new FormData;formData.append("eventid",eventId),formData.append("force",force?1:0),formData.append("categoryid",categoryId),formData.append("sesskey",M.cfg.sesskey),console.log(formData);const response=await fetch("".concat(M.cfg.wwwroot,"/local/eventocoursecreation/create_course.php"),{method:"POST",body:formData});await console.log(response);const result=await response.json();if(!result.status)throw new Error(result.message||M.util.get_string("creationfailed","local_eventocoursecreation"));card&&(card.classList.add("created"),setTimeout((()=>{cachedPreviewData.courses=cachedPreviewData.courses.filter((course=>course.eventId!==parseInt(eventId)));const item=card.closest(Selectors_regions.courseItem);item&&(item.style.opacity=0,setTimeout((()=>{item.remove(),updateCreateSelectedButton(),updateSelectionCount()}),300))}),500)),Notification.addNotification({message:result.message||M.util.get_string("creationsuccessful","local_eventocoursecreation"),type:"success"})}catch(error){button.innerHTML=originalText,button.disabled=!1,card&&(card.classList.remove("creating"),card.classList.add("error"),setTimeout((()=>{card.classList.remove("error")}),2e3)),Notification.exception(error)}finally{isCreatingCourse=!1}})(eventId,forceCheckbox.checked,e.target)}))}));const createSelectedBtn=container.querySelector(Selectors_controls.createSelected);createSelectedBtn&&createSelectedBtn.addEventListener("click",createSelectedCourses),container.querySelectorAll(Selectors_filters.buttons).forEach((button=>{button.addEventListener("click",(e=>{const filterType=e.target.dataset.filter;applyFilter(filterType)}))}));const sortSelect=container.querySelector(Selectors_sorts.select);sortSelect&&sortSelect.addEventListener("change",(e=>{applySortBy(e.target.value)}));const selectAllEligible=container.querySelector(Selectors_controls.selectAllEligible);selectAllEligible&&selectAllEligible.addEventListener("change",handleSelectAllEligible);const forceAll=container.querySelector(Selectors_controls.forceAll);forceAll&&forceAll.addEventListener("change",handleForceAll),updateCreateSelectedButton(),updateSelectionCount(),applyFilter("all"),applySortBy("status")};return{init:async catId=>{if(categoryId=catId,previewContainer=document.querySelector(Selectors_regions.previewContainer),!previewContainer)return void console.error("Preview container not found");const previewSection=document.querySelector(Selectors_sections.individualCreation),container=document.querySelector(Selectors_sections.individualContainer);previewSection&&container&&$(container).on("shown.bs.collapse",(async()=>{cachedPreviewData?await renderPreviewContent():await loadPreviewData(categoryId)})),await loadPreviewData(categoryId)}}}));

//# sourceMappingURL=preview.min.js.map