define("local_eventocoursecreation/preview_old",["core/notification","core/str","core/templates","core/ajax"],(function(Notification,Str,Templates,Ajax){const Selectors_sections={bulkCreation:"#id_runnowheader",individualCreation:"#id_individualcreationheader"},Selectors_controls={bulkForce:"#id_force",individualForce:".force-create",bulkCreate:"#id_runnow",createSingle:".create-single",courseSelect:".course-select",createSelected:".create-selected"},Selectors_regions={previewGrid:".course-grid",courseCard:".course-preview-card",previewContainer:"#evento-preview-content"};let cachedPreviewData=null;const loadPreviewInBackground=async categoryId=>{try{const formData=new FormData;formData.append("categoryid",categoryId),formData.append("sesskey",M.cfg.sesskey);const response=await fetch("".concat(M.cfg.wwwroot,"/local/eventocoursecreation/preview.php"),{method:"POST",body:formData});return cachedPreviewData=await response.json(),cachedPreviewData}catch(error){return console.error("Background preview load failed:",error),null}},updateCourseSelectionState=(checkbox,container,course)=>{const createSelectedBtn=container.querySelector(Selectors_controls.createSelected),forceCheckbox=container.querySelector("#force-".concat(checkbox.value)),isForced=(null==forceCheckbox?void 0:forceCheckbox.checked)||!1;course.canCreate||isForced?checkbox.disabled=!1:(checkbox.checked=!1,checkbox.disabled=!0);const selectedCount=container.querySelectorAll("".concat(Selectors_controls.courseSelect,":checked")).length;createSelectedBtn.disabled=0===selectedCount},renderPreviewContent=async()=>{if(previewContainer)try{var _cachedPreviewData,_cachedPreviewData$co;if(null===(_cachedPreviewData=cachedPreviewData)||void 0===_cachedPreviewData||null===(_cachedPreviewData$co=_cachedPreviewData.courses)||void 0===_cachedPreviewData$co||!_cachedPreviewData$co.length){const noCoursesString=await Str.get_string("nocoursestocreate","local_eventocoursecreation");return void(previewContainer.innerHTML='\n                    <div class="alert alert-info">\n                        <i class="fa fa-info-circle"></i> '.concat(noCoursesString,"\n                    </div>"))}const templateContext={courses:cachedPreviewData.courses.map((course=>({...course,warnings:Array.isArray(course.warnings)?course.warnings:[]}))),str:{select:await Str.get_string("select","local_eventocoursecreation"),force:await Str.get_string("forcecreation","local_eventocoursecreation"),create:await Str.get_string("runnow","local_eventocoursecreation"),createselected:await Str.get_string("createselected","local_eventocoursecreation"),coursecreated:await Str.get_string("coursecreated","local_eventocoursecreation"),coursealreadyexists:await Str.get_string("coursealreadyexists","local_eventocoursecreation"),creationnotenabled:await Str.get_string("creationnotenabled","local_eventocoursecreation"),creationnotallowed:await Str.get_string("creationnotallowed","local_eventocoursecreation"),outsidecreationperiod:await Str.get_string("outsidecreationperiod","local_eventocoursecreation")}},template=await Templates.render("local_eventocoursecreation/preview_grid",templateContext);previewContainer.innerHTML=template,initializePreviewHandlers()}catch(error){console.error("Error rendering preview content:",error),Notification.exception(error)}else console.error("Preview container not initialized")},initializePreviewHandlers=()=>{previewContainer.querySelectorAll(Selectors_controls.courseSelect).forEach((checkbox=>{checkbox.addEventListener("change",(e=>{const course=cachedPreviewData.courses.find((c=>c.eventId===e.target.value));updateCourseSelectionState(e.target,previewContainer,course)}))})),previewContainer.querySelectorAll(Selectors_controls.individualForce).forEach((checkbox=>{checkbox.addEventListener("change",(e=>{const courseSelect=previewContainer.querySelector("#select-".concat(e.target.id.split("-")[1])),course=cachedPreviewData.courses.find((c=>c.eventId===courseSelect.value));updateCourseSelectionState(courseSelect,previewContainer,course)}))}))};return{init:async categoryId=>{var _document$querySelect;if(previewContainer=document.querySelector(Selectors_regions.previewContainer),!previewContainer)return void console.error("Preview container not found in form");const previewSection=document.querySelector(Selectors_sections.individualCreation);if(previewSection){new MutationObserver((mutations=>{mutations.forEach((mutation=>{if("attributes"===mutation.type&&"class"===mutation.attributeName){previewSection.classList.contains("collapsed")||cachedPreviewData||loadPreviewInBackground(categoryId).then((()=>{renderPreviewContent()}))}}))})).observe(previewSection,{attributes:!0})}null===(_document$querySelect=document.querySelector(Selectors_controls.bulkCreate))||void 0===_document$querySelect||_document$querySelect.addEventListener("click",(e=>{e.preventDefault(),"function"==typeof runBulkCreation&&runBulkCreation(categoryId)})),loadPreviewInBackground(categoryId)}}}));

//# sourceMappingURL=preview_old.min.js.map